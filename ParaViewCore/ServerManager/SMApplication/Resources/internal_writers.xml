<ServerManagerConfiguration><ProxyGroup name="internal_writers"><Proxy class="vtkXMLDataSetWriter" name="XMLDataSetWriterCore">
      <Documentation>Internal writer for writing xml-based vtk
      files.</Documentation>
      <IntVectorProperty command="SetDataMode" default_values="2" name="DataMode" number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Ascii" value="0" />
          <Entry text="Binary" value="1" />
          <Entry text="Appended" value="2" />
        </EnumerationDomain>
        <Documentation>The mode uses for writing the file's data i.e. ascii,
        binary, appended binary.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetHeaderType" default_values="64" name="HeaderType" number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="UInt32" value="32" />
          <Entry text="UInt64" value="64" />
        </EnumerationDomain>
        <Documentation>Set the binary data header word type.  The default is
        UInt32. Set to UInt64 when storing arrays requiring 64-bit indexing.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetEncodeAppendedData" default_values="0" name="EncodeAppendedData" number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When EncodeAppendedData is turned ON, the writer uses
        base64 encoding when writing binary data (only if appended mode is
        selected).</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetCompressorType" default_values="0" name="CompressorType" number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="None" value="0" />
          <Entry text="ZLib" value="1" />
        </EnumerationDomain>
        <Documentation>The compression algorithm used to compress binary data
        (appended mode only).</Documentation>
      </IntVectorProperty>
      
    </Proxy>
    
    <PWriterProxy base_proxygroup="internal_writers" base_proxyname="XMLDataSetWriterCore" class="vtkXMLPMultiBlockDataWriter" name="XMLPMultiBlockDataWriterCore">
      <Documentation>Internal proxy used by
      XMLMultiBlockDataWriter.</Documentation>
      
    </PWriterProxy>
    
    <PWriterProxy base_proxygroup="internal_writers" base_proxyname="XMLDataSetWriterCore" class="vtkXMLPPolyDataWriter" name="XMLPPolyDataWriterCore">
      <Documentation>Internal writer used to write XML poly data in
      parallel.</Documentation>
    </PWriterProxy>
    
    <PWriterProxy base_proxygroup="internal_writers" base_proxyname="XMLDataSetWriterCore" class="vtkXMLPUnstructuredGridWriter" name="XMLPUnstructuredGridWriterCore">
      <Documentation>Internal writer used to write XML poly data in
      parallel.</Documentation>
    </PWriterProxy>
    
    <PWriterProxy base_proxygroup="internal_writers" base_proxyname="XMLDataSetWriterCore" class="vtkXMLPStructuredGridWriter" name="XMLPStructuredGridWriterCore">
      <Documentation>Internal writer used to write XML poly data in
      parallel.</Documentation>
    </PWriterProxy>
    
    <PWriterProxy base_proxygroup="internal_writers" base_proxyname="XMLDataSetWriterCore" class="vtkXMLPRectilinearGridWriter" name="XMLPRectilinearGridWriterCore">
      <Documentation>Writer to write rectilinear grid in a xml-based vtk data
      file. Can be used for parallel writing.</Documentation>
    </PWriterProxy>
    
    <PWriterProxy base_proxygroup="internal_writers" base_proxyname="XMLDataSetWriterCore" class="vtkXMLPImageDataWriter" name="XMLPImageDataWriterCore" parallel_only="1">
      <Documentation>Writer to write image data in a xml-based vtk data file.
      Can be used for parallel writing.</Documentation>
    </PWriterProxy>
  </ProxyGroup></ServerManagerConfiguration>